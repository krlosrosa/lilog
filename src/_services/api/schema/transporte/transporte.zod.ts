/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * Produtividade API
 * API de produtividade para gest√£o de produtividade dos funcion√°rios dentro do armaz√©m e gest√£o de carregamento
 * OpenAPI spec version: 1.0
 */
import {
  z as zod
} from 'zod';


/**
 * @summary Adiciona um transporte
 */
export const adicionarTransporteParams = zod.object({
  "centerId": zod.string()
})

export const adicionarTransporteQueryParams = zod.object({
  "dataExpedicao": zod.iso.datetime({})
})

export const adicionarTransporteBodyItem = zod.object({
  "numeroTransporte": zod.string(),
  "nomeRota": zod.string().optional(),
  "nomeTransportadora": zod.string().optional(),
  "placa": zod.string().optional(),
  "prioridade": zod.number().optional(),
  "obs": zod.string().optional()
})
export const adicionarTransporteBody = zod.array(adicionarTransporteBodyItem)

/**
 * @summary Obt√©m os transportes por ids
 */
export const getTransportesByIdsBodyItem = zod.string()
export const getTransportesByIdsBody = zod.array(getTransportesByIdsBodyItem)

/**
 * @summary Adiciona paletes de separa√ß√£o
 */
export const adicionarPaletesSeparacaoBodyItem = zod.object({
  "transporteId": zod.string(),
  "id": zod.string(),
  "empresa": zod.string(),
  "quantidadeCaixas": zod.number(),
  "quantidadeUnidades": zod.number(),
  "quantidadePaletes": zod.number(),
  "enderecoVisitado": zod.number(),
  "segmento": zod.string(),
  "tipoProcesso": zod.string()
})
export const adicionarPaletesSeparacaoBody = zod.array(adicionarPaletesSeparacaoBodyItem)

/**
 * @summary Lista os transportes n√£o cadastrados
 */
export const listarTransportesNaoCadastradosBodyItem = zod.string()
export const listarTransportesNaoCadastradosBody = zod.array(listarTransportesNaoCadastradosBodyItem)

/**
 * @summary Guarda as inte de separa√ß√£o
 */
export const transporteControllerGuardarIntesSeparacaoBodyItem = zod.object({

})
export const transporteControllerGuardarIntesSeparacaoBody = zod.array(transporteControllerGuardarIntesSeparacaoBodyItem)

/**
 * @summary Busca os itens por transporte
 */
export const transporteControllerBuscarItensPorTransporteParams = zod.object({
  "transporteId": zod.string()
})

export const transporteControllerBuscarItensPorTransporteResponseItem = zod.object({
  "codItem": zod.string(),
  "lote": zod.string(),
  "descricao": zod.string()
})
export const transporteControllerBuscarItensPorTransporteResponse = zod.array(transporteControllerBuscarItensPorTransporteResponseItem)

/**
 * @summary Busca os transportes por data
 */
export const buscarTransportesPorCentroParams = zod.object({
  "centerId": zod.string()
})

export const buscarTransportesPorCentroQueryParams = zod.object({
  "data": zod.string()
})

export const buscarTransportesPorCentroResponseItem = zod.object({
  "numeroTransporte": zod.string(),
  "status": zod.enum(['AGUARDANDO_SEPARACAO', 'EM_SEPARACAO', 'SEPARACAO_CONCLUIDA', 'EM_CONFERENCIA', 'CONFERENCIA_CONCLUIDA', 'EM_CARREGAMENTO', 'CARREGAMENTO_CONCLUIDO', 'FATURADO', 'LIBERADO_PORTARIA', 'CANCELADO']),
  "nomeRota": zod.string(),
  "nomeTransportadora": zod.string(),
  "placa": zod.string(),
  "temCortes": zod.boolean().optional(),
  "cadastradoPorId": zod.string().optional(),
  "prioridade": zod.number().optional(),
  "obs": zod.string().optional(),
  "qtdImpressaoSeparacao": zod.number().optional(),
  "qtdImpressaoCarregamento": zod.number().optional(),
  "separacao": zod.enum(['NAO_INICIADO', 'EM_PROGRESSO', 'CONCLUIDO', 'EM_PAUSA']),
  "conferencia": zod.enum(['NAO_INICIADO', 'EM_PROGRESSO', 'CONCLUIDO', 'EM_PAUSA']),
  "carregamento": zod.enum(['NAO_INICIADO', 'EM_PROGRESSO', 'CONCLUIDO', 'EM_PAUSA'])
})
export const buscarTransportesPorCentroResponse = zod.array(buscarTransportesPorCentroResponseItem)

/**
 * @summary Lista os transportes com demanda iniciada
 */
export const listarTransportesComDemandaIniciadaBodyItem = zod.string()
export const listarTransportesComDemandaIniciadaBody = zod.array(listarTransportesComDemandaIniciadaBodyItem)

export const listarTransportesComDemandaIniciadaResponseItem = zod.string()
export const listarTransportesComDemandaIniciadaResponse = zod.array(listarTransportesComDemandaIniciadaResponseItem)

